(function(){var t,s;s=function(){function t(){}return t.merge_options=function(t,s){var i,n;n={};for(i in t)n[i]=t[i];for(i in s)n[i]=s[i];return n},t}(),t=function(){function t(t){var s;null==t&&(t={}),this._set_options(t),this._callbacks=[],s=this,this.ready=!1,this.status="processing",this.options.max>0&&(this._timeout_process=setTimeout(function(){return s._finish("timeout")},this.options.max)),this._time_started=(new Date).getTime(),this._last_checked=this._time_started,this._success_iterations=0,this._preprocess=setTimeout(function(){return s._process=setInterval(function(){var t,i;return i=(new Date).getTime(),t=i-s._last_checked-s.options.frequency,s.options.min_delta<t&&t<s.options.max_delta?(s._success_iterations++,s._success_iterations>=s.options.iterations&&s._finish("success")):s._success_iterations=0,s._last_checked=i},s.options.frequency)},this.options.delay)}return t.defaults={delay:100,frequency:30,iterations:3,duration:null,scatter:5,min_delta:null,max_delta:null,max:null},t.prototype._set_options=function(t){return this.options=s.merge_options(this.constructor.defaults,t),null!=this.options.frequency&&(this.options.frequency=parseInt(this.options.frequency)),null!=this.options.iterations&&(this.options.iterations=parseInt(this.options.iterations)),null!=this.options.scatter&&(this.options.scatter=parseInt(this.options.scatter)),null!=this.options.min_delta&&(this.options.min_delta=parseInt(this.options.min_delta)),null!=this.options.max_delta&&(this.options.max_delta=parseInt(this.options.max_delta)),null!=this.options.max&&(this.options.max=parseInt(this.options.max)),null!=this.options.duration&&(this.options.duration=parseInt(this.options.duration),this.options.iterations=Math.ceil(this.options.duration/this.options.frequency)),null==this.options.min_delta&&(this.options.min_delta=-this.options.scatter),null==this.options.max_delta?this.options.max_delta=this.options.scatter:void 0},t.prototype.info=function(){var t,s;return null!=this.time_passed?s=this.time_passed:(t=(new Date).getTime(),s=t-this._time_started),{status:this.status,time_passed:s,ready:this.ready,options:this.options}},t.prototype._finish=function(t){var s,i,n,e,o,a;for(null!=this._preprocess&&clearTimeout(this._preprocess),null!=this._process&&clearInterval(this._process),null!=this._timeout_process&&clearTimeout(this._timeout_process),this.ready=!0,this.status=t,e=(new Date).getTime(),this.time_passed=e-this._time_started,o=this._callbacks,a=[],i=0,n=o.length;n>i;i++)s=o[i],a.push(s.fn.call(s.self,this.info()));return a},t.prototype["do"]=function(t,s){return null==s&&(s=null),null==s&&(s=t,t=this),this.ready?s.call(t,this.info()):this._callbacks.push({fn:s,self:t}),this},t}(),window.Afterlag=t}).call(this);
//# sourceMappingURL=data:application/json;base64,